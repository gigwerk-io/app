version: 2

aliases:
  - &install-chrome
      name: Install Chrome
      command: |
        sudo apt install -y libappindicator3-1
        curl -L -o google-chrome.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
        sudo dpkg -i google-chrome.deb
        sudo sed -i 's|HERE/chrome\"|HERE/chrome\" --disable-setuid-sandbox|g' /opt/google/chrome/google-chrome
        rm google-chrome.deb

  - &install-pip
      name: Install Python Pip
      command: sudo apt-get update; sudo apt install python-pip; python --version; pip --version;

  - &restore-cache-src
      key: dependency-cache-{{ checksum "package.json" }}

  - &save-cache-src
      key: dependency-cache-{{ checksum "package.json" }}
      paths:
        - node_modules

defaults: &defaults
  working_directory: /tmp/workspace
  docker:
    - image: circleci/node:10-browsers

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *restore-cache-src
      - run: npm install
      - run: sudo npm install -g @ionic/cli cordova
      - run: ionic -v
      - run: ionic build --prod
      - save_cache: *save-cache-src
#      - run: npm run lint
#      - run: npm run build --prodK
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - "*"
      - persist_to_workspace:
          root: .
          paths: www/
  test:
    <<: *defaults
    steps:
      - run: *install-chrome
      - attach_workspace:
          at: /tmp/workspace
      - run: npm run e2e
  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: *install-pip
      - run: pip install awscli; aws --version;
      - run: aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
      - run: aws configure set aws_secret_access_key $AWS_ACCESS_KEY_ID
      - run: aws configure set region $AWS_DEFAULT_REGION
      - run: aws s3 sync www/ s3://favr-ionic-staging
  production-deployment:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: *install-pip
      - run: pip install awscli; aws --version;
      - run: aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
      - run: aws configure set aws_secret_access_key $AWS_ACCESS_KEY_ID
      - run: aws configure set region $AWS_DEFAULT_REGION
      - run: aws s3 sync www/ s3://favr-pwa
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master
      - production-deployment:
          requires:
            - test
          filters:
            branches:
              only: production
